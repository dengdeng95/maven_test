<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dhf.dao.TestGeneratorDao">
  <resultMap id="BaseResultMap" type="com.dhf.model.TestGenerator" >
	<id column="id" property="id" jdbcType="BIGINT" />
	<result column="name" property="name" jdbcType="VARCHAR" />
	<result column="transactionMoney" property="transactionMoney" jdbcType="DECIMAL" />
	<result column="recordType" property="recordType" jdbcType="INTEGER" />
	<result column="created" property="created" jdbcType="TIMESTAMP" />
	<result column="isRequired" property="isRequired" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  	id,name,transactionMoney,recordType,created,isRequired
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dhf.model.TestGeneratorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from test_generator
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from test_generator
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dhf.model.TestGeneratorExample" >
    delete from test_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dhf.model.TestGenerator" >
    insert into test_generator (id,name,transactionMoney,recordType,created,isRequired
      )
    values (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{transactionMoney,jdbcType=DECIMAL},#{recordType,jdbcType=INTEGER},#{created,jdbcType=TIMESTAMP},#{isRequired,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dhf.model.TestGenerator" >
    insert into test_generator
    <trim prefix="(" suffix=")" suffixOverrides="," >
	  <if test="id != null" >
        id,
      </if>
	  <if test="name != null" >
        name,
      </if>
	  <if test="transactionMoney != null" >
        transactionMoney,
      </if>
	  <if test="recordType != null" >
        recordType,
      </if>
	  <if test="created != null" >
        created,
      </if>
	  <if test="isRequired != null" >
        isRequired,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
	  <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
	  <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
	  <if test="transactionMoney != null" >
        #{transactionMoney,jdbcType=DECIMAL},
      </if>
	  <if test="recordType != null" >
        #{recordType,jdbcType=INTEGER},
      </if>
	  <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
	  <if test="isRequired != null" >
        #{isRequired,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dhf.model.TestGeneratorExample" resultType="java.lang.Integer" >
    select count(*) from test_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from test_generator
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update test_generator
    <set>
	  <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
	  <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
	  <if test="record.transactionMoney != null" >
        transactionMoney = #{record.transactionMoney,jdbcType=DECIMAL},
      </if>
	  <if test="record.recordType != null" >
        recordType = #{record.recordType,jdbcType=INTEGER},
      </if>
	  <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
	  <if test="record.isRequired != null" >
        isRequired = #{record.isRequired,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update test_generator
    set id = #{record.id,jdbcType=BIGINT},name = #{record.name,jdbcType=VARCHAR},transactionMoney = #{record.transactionMoney,jdbcType=DECIMAL},recordType = #{record.recordType,jdbcType=INTEGER},created = #{record.created,jdbcType=TIMESTAMP},isRequired = #{record.isRequired,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dhf.model.TestGenerator" >
    update test_generator
    <set>
	  <if test="id != null" >
        id = #{id,jdbcType=BIGINT},
      </if>
	  <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
	  <if test="transactionMoney != null" >
        transactionMoney = #{transactionMoney,jdbcType=DECIMAL},
      </if>
	  <if test="recordType != null" >
        recordType = #{recordType,jdbcType=INTEGER},
      </if>
	  <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
	  <if test="isRequired != null" >
        isRequired = #{isRequired,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dhf.model.TestGenerator" >
    update test_generator
    set name = #{name,jdbcType=VARCHAR},transactionMoney = #{transactionMoney,jdbcType=DECIMAL},recordType = #{recordType,jdbcType=INTEGER},created = #{created,jdbcType=TIMESTAMP},isRequired = #{isRequired,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>